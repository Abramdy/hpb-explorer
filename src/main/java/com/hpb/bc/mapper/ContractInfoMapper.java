/*
 * Copyright 2020 HPB Foundation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.hpb.bc.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.hpb.bc.entity.ContractInfo;
import com.hpb.bc.example.ContractInfoExample;

public interface ContractInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contract_info
     *
     * @mbg.generated
     */
    long countByExample(ContractInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contract_info
     *
     * @mbg.generated
     */
    int deleteByExample(ContractInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contract_info
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(String contractAddr);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contract_info
     *
     * @mbg.generated
     */
    int insert(ContractInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contract_info
     *
     * @mbg.generated
     */
    int insertSelective(ContractInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contract_info
     *
     * @mbg.generated
     */
    List<ContractInfo> selectByExampleWithBLOBs(ContractInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contract_info
     *
     * @mbg.generated
     */
    List<ContractInfo> selectByExample(ContractInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contract_info
     *
     * @mbg.generated
     */
    ContractInfo selectByPrimaryKey(String contractAddr);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contract_info
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") ContractInfo record, @Param("example") ContractInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contract_info
     *
     * @mbg.generated
     */
    int updateByExampleWithBLOBs(@Param("record") ContractInfo record, @Param("example") ContractInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contract_info
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") ContractInfo record, @Param("example") ContractInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contract_info
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(ContractInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contract_info
     *
     * @mbg.generated
     */
    int updateByPrimaryKeyWithBLOBs(ContractInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contract_info
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(ContractInfo record);
}