/*
 * Copyright 2020 HPB Foundation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.hpb.bc.mapper;

import com.hpb.bc.entity.BlockBigRecord;
import com.hpb.bc.example.BlockBigRecordExample;

import java.util.List;

import org.apache.ibatis.annotations.Param;

public interface BlockBigRecordMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_big_record
     *
     * @mbg.generated
     */
    long countByExample(BlockBigRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_big_record
     *
     * @mbg.generated
     */
    int deleteByExample(BlockBigRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_big_record
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Long blockNumber);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_big_record
     *
     * @mbg.generated
     */
    int insert(BlockBigRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_big_record
     *
     * @mbg.generated
     */
    int insertSelective(BlockBigRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_big_record
     *
     * @mbg.generated
     */
    List<BlockBigRecord> selectByExampleWithBLOBs(BlockBigRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_big_record
     *
     * @mbg.generated
     */
    List<BlockBigRecord> selectByExample(BlockBigRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_big_record
     *
     * @mbg.generated
     */
    BlockBigRecord selectByPrimaryKey(Long blockNumber);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_big_record
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") BlockBigRecord record, @Param("example") BlockBigRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_big_record
     *
     * @mbg.generated
     */
    int updateByExampleWithBLOBs(@Param("record") BlockBigRecord record, @Param("example") BlockBigRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_big_record
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") BlockBigRecord record, @Param("example") BlockBigRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_big_record
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(BlockBigRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_big_record
     *
     * @mbg.generated
     */
    int updateByPrimaryKeyWithBLOBs(BlockBigRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block_big_record
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(BlockBigRecord record);

    BlockBigRecord selectBlockBigRecordByBlockNumber(@Param("blockNumber") Long blockNumber);

    BlockBigRecord selectBlockBigRecordByBlockHash(@Param("blockHash") String blockHash);
}