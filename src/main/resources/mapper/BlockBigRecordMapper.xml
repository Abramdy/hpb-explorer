<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hpb.bc.mapper.BlockBigRecordMapper">
    <resultMap id="BaseResultMap" type="com.hpb.bc.entity.BlockBigRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="block_number" jdbcType="BIGINT" property="blockNumber"/>
        <result column="block_hash" jdbcType="VARCHAR" property="blockHash"/>
        <result column="tx_count" jdbcType="BIGINT" property="txCount"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hpb.bc.entity.BlockBigRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="block_info_json_str" jdbcType="LONGVARCHAR" property="blockInfoJsonStr"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        block_number, block_hash, tx_count
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        block_info_json_str
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.hpb.bc.example.BlockBigRecordExample"
            resultMap="ResultMapWithBLOBs">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from block_big_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.hpb.bc.example.BlockBigRecordExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from block_big_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from block_big_record
        where block_number = #{blockNumber,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from block_big_record
        where block_number = #{blockNumber,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.hpb.bc.example.BlockBigRecordExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from block_big_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.hpb.bc.entity.BlockBigRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into block_big_record (block_number, block_hash, tx_count,
        block_info_json_str)
        values (#{blockNumber,jdbcType=BIGINT}, #{blockHash,jdbcType=VARCHAR}, #{txCount,jdbcType=BIGINT},
        #{blockInfoJsonStr,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.hpb.bc.entity.BlockBigRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into block_big_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="blockNumber != null">
                block_number,
            </if>
            <if test="blockHash != null">
                block_hash,
            </if>
            <if test="txCount != null">
                tx_count,
            </if>
            <if test="blockInfoJsonStr != null">
                block_info_json_str,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="blockNumber != null">
                #{blockNumber,jdbcType=BIGINT},
            </if>
            <if test="blockHash != null">
                #{blockHash,jdbcType=VARCHAR},
            </if>
            <if test="txCount != null">
                #{txCount,jdbcType=BIGINT},
            </if>
            <if test="blockInfoJsonStr != null">
                #{blockInfoJsonStr,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.hpb.bc.example.BlockBigRecordExample" resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from block_big_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update block_big_record
        <set>
            <if test="record.blockNumber != null">
                block_number = #{record.blockNumber,jdbcType=BIGINT},
            </if>
            <if test="record.blockHash != null">
                block_hash = #{record.blockHash,jdbcType=VARCHAR},
            </if>
            <if test="record.txCount != null">
                tx_count = #{record.txCount,jdbcType=BIGINT},
            </if>
            <if test="record.blockInfoJsonStr != null">
                block_info_json_str = #{record.blockInfoJsonStr,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update block_big_record
        set block_number = #{record.blockNumber,jdbcType=BIGINT},
        block_hash = #{record.blockHash,jdbcType=VARCHAR},
        tx_count = #{record.txCount,jdbcType=BIGINT},
        block_info_json_str = #{record.blockInfoJsonStr,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update block_big_record
        set block_number = #{record.blockNumber,jdbcType=BIGINT},
        block_hash = #{record.blockHash,jdbcType=VARCHAR},
        tx_count = #{record.txCount,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.hpb.bc.entity.BlockBigRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update block_big_record
        <set>
            <if test="blockHash != null">
                block_hash = #{blockHash,jdbcType=VARCHAR},
            </if>
            <if test="txCount != null">
                tx_count = #{txCount,jdbcType=BIGINT},
            </if>
            <if test="blockInfoJsonStr != null">
                block_info_json_str = #{blockInfoJsonStr,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where block_number = #{blockNumber,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hpb.bc.entity.BlockBigRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update block_big_record
        set block_hash = #{blockHash,jdbcType=VARCHAR},
        tx_count = #{txCount,jdbcType=BIGINT},
        block_info_json_str = #{blockInfoJsonStr,jdbcType=LONGVARCHAR}
        where block_number = #{blockNumber,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hpb.bc.entity.BlockBigRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update block_big_record
        set block_hash = #{blockHash,jdbcType=VARCHAR},
        tx_count = #{txCount,jdbcType=BIGINT}
        where block_number = #{blockNumber,jdbcType=BIGINT}
    </update>

    <select id="selectBlockBigRecordByBlockNumber" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from block_big_record where block_number = #{blockNumber,jdbcType=BIGINT}
    </select>

    <select id="selectBlockBigRecordByBlockHash" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from block_big_record where block_hash = #{blockHash,jdbcType=VARCHAR}
    </select>
</mapper>