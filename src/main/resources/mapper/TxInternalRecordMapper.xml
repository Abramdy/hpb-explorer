<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hpb.bc.mapper.TxInternalRecordMapper">
  <resultMap id="BaseResultMap" type="com.hpb.bc.entity.TxInternalRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="tx_hash" jdbcType="VARCHAR" property="txHash" />
    <result column="block_hash" jdbcType="VARCHAR" property="blockHash" />
    <result column="block_number" jdbcType="BIGINT" property="blockNumber" />
    <result column="block_timestamp" jdbcType="BIGINT" property="blockTimestamp" />
    <result column="contract_address" jdbcType="VARCHAR" property="contractAddress" />
    <result column="from_address" jdbcType="VARCHAR" property="fromAddress" />
    <result column="to_address" jdbcType="VARCHAR" property="toAddress" />
    <result column="quantity" jdbcType="VARCHAR" property="quantity" />
    <result column="depth" jdbcType="VARCHAR" property="depth" />
    <result column="log_id" jdbcType="VARCHAR" property="logId" />
    <result column="token_type" jdbcType="VARCHAR" property="tokenType" />
    <result column="gaslimit" jdbcType="VARCHAR" property="gaslimit" />
    <result column="create_timestamp" jdbcType="TIMESTAMP" property="createTimestamp" />
    <result column="update_timestamp" jdbcType="TIMESTAMP" property="updateTimestamp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    tx_hash, block_hash, block_number, block_timestamp, contract_address, from_address, 
    to_address, quantity, depth, log_id, token_type, gaslimit, create_timestamp, update_timestamp
  </sql>
  <select id="selectByExample" parameterType="com.hpb.bc.example.TxInternalRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tx_internal_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.hpb.bc.example.TxInternalRecordExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tx_internal_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hpb.bc.entity.TxInternalRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tx_internal_record (tx_hash, block_hash, block_number, 
      block_timestamp, contract_address, from_address, 
      to_address, quantity, depth, 
      log_id, token_type, gaslimit, 
      create_timestamp, update_timestamp)
    values (#{txHash,jdbcType=VARCHAR}, #{blockHash,jdbcType=VARCHAR}, #{blockNumber,jdbcType=BIGINT}, 
      #{blockTimestamp,jdbcType=BIGINT}, #{contractAddress,jdbcType=VARCHAR}, #{fromAddress,jdbcType=VARCHAR}, 
      #{toAddress,jdbcType=VARCHAR}, #{quantity,jdbcType=VARCHAR}, #{depth,jdbcType=VARCHAR}, 
      #{logId,jdbcType=VARCHAR}, #{tokenType,jdbcType=VARCHAR}, #{gaslimit,jdbcType=VARCHAR}, 
      #{createTimestamp,jdbcType=TIMESTAMP}, #{updateTimestamp,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hpb.bc.entity.TxInternalRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tx_internal_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="txHash != null">
        tx_hash,
      </if>
      <if test="blockHash != null">
        block_hash,
      </if>
      <if test="blockNumber != null">
        block_number,
      </if>
      <if test="blockTimestamp != null">
        block_timestamp,
      </if>
      <if test="contractAddress != null">
        contract_address,
      </if>
      <if test="fromAddress != null">
        from_address,
      </if>
      <if test="toAddress != null">
        to_address,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="depth != null">
        depth,
      </if>
      <if test="logId != null">
        log_id,
      </if>
      <if test="tokenType != null">
        token_type,
      </if>
      <if test="gaslimit != null">
        gaslimit,
      </if>
      <if test="createTimestamp != null">
        create_timestamp,
      </if>
      <if test="updateTimestamp != null">
        update_timestamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="txHash != null">
        #{txHash,jdbcType=VARCHAR},
      </if>
      <if test="blockHash != null">
        #{blockHash,jdbcType=VARCHAR},
      </if>
      <if test="blockNumber != null">
        #{blockNumber,jdbcType=BIGINT},
      </if>
      <if test="blockTimestamp != null">
        #{blockTimestamp,jdbcType=BIGINT},
      </if>
      <if test="contractAddress != null">
        #{contractAddress,jdbcType=VARCHAR},
      </if>
      <if test="fromAddress != null">
        #{fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="toAddress != null">
        #{toAddress,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=VARCHAR},
      </if>
      <if test="depth != null">
        #{depth,jdbcType=VARCHAR},
      </if>
      <if test="logId != null">
        #{logId,jdbcType=VARCHAR},
      </if>
      <if test="tokenType != null">
        #{tokenType,jdbcType=VARCHAR},
      </if>
      <if test="gaslimit != null">
        #{gaslimit,jdbcType=VARCHAR},
      </if>
      <if test="createTimestamp != null">
        #{createTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTimestamp != null">
        #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hpb.bc.example.TxInternalRecordExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from tx_internal_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tx_internal_record
    <set>
      <if test="record.txHash != null">
        tx_hash = #{record.txHash,jdbcType=VARCHAR},
      </if>
      <if test="record.blockHash != null">
        block_hash = #{record.blockHash,jdbcType=VARCHAR},
      </if>
      <if test="record.blockNumber != null">
        block_number = #{record.blockNumber,jdbcType=BIGINT},
      </if>
      <if test="record.blockTimestamp != null">
        block_timestamp = #{record.blockTimestamp,jdbcType=BIGINT},
      </if>
      <if test="record.contractAddress != null">
        contract_address = #{record.contractAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.fromAddress != null">
        from_address = #{record.fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.toAddress != null">
        to_address = #{record.toAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=VARCHAR},
      </if>
      <if test="record.depth != null">
        depth = #{record.depth,jdbcType=VARCHAR},
      </if>
      <if test="record.logId != null">
        log_id = #{record.logId,jdbcType=VARCHAR},
      </if>
      <if test="record.tokenType != null">
        token_type = #{record.tokenType,jdbcType=VARCHAR},
      </if>
      <if test="record.gaslimit != null">
        gaslimit = #{record.gaslimit,jdbcType=VARCHAR},
      </if>
      <if test="record.createTimestamp != null">
        create_timestamp = #{record.createTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTimestamp != null">
        update_timestamp = #{record.updateTimestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tx_internal_record
    set tx_hash = #{record.txHash,jdbcType=VARCHAR},
      block_hash = #{record.blockHash,jdbcType=VARCHAR},
      block_number = #{record.blockNumber,jdbcType=BIGINT},
      block_timestamp = #{record.blockTimestamp,jdbcType=BIGINT},
      contract_address = #{record.contractAddress,jdbcType=VARCHAR},
      from_address = #{record.fromAddress,jdbcType=VARCHAR},
      to_address = #{record.toAddress,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=VARCHAR},
      depth = #{record.depth,jdbcType=VARCHAR},
      log_id = #{record.logId,jdbcType=VARCHAR},
      token_type = #{record.tokenType,jdbcType=VARCHAR},
      gaslimit = #{record.gaslimit,jdbcType=VARCHAR},
      create_timestamp = #{record.createTimestamp,jdbcType=TIMESTAMP},
      update_timestamp = #{record.updateTimestamp,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>


    <select id="selectTxInternalRecordListByBlockHash" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tx_internal_record where block_hash = #{blockHash,jdbcType=VARCHAR} order by block_number desc
    </select>

    <select id="selectTxInternalRecordListByTxHash" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tx_internal_record where tx_hash = #{txHash,jdbcType=VARCHAR} order by block_number desc
    </select>

    <select id="selectTxInternalRecordListByBlockNumber" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tx_internal_record where block_number = #{blockNumber,jdbcType=VARCHAR} order by block_number desc
    </select>

    <select id="selectTxInternalRecordListByFromAddress" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tx_internal_record where from_address = #{fromAddress,jdbcType=VARCHAR} order by block_number desc
    </select>

    <select id="selectTxInternalRecordListByToAddress" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tx_internal_record where to_address = #{toAddress,jdbcType=VARCHAR} order by block_number desc
    </select>

    <select id="selectTxInternalRecordListByReferedAddress" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tx_internal_record where to_address = #{referedAddress,jdbcType=VARCHAR} or from_address =
        #{referedAddress,jdbcType=VARCHAR} order by block_number desc
    </select>


</mapper>