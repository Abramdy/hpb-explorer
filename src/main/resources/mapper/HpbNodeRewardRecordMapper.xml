<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hpb.bc.mapper.HpbNodeRewardRecordMapper">
  <resultMap id="BaseResultMap" type="com.hpb.bc.entity.HpbNodeRewardRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="node_address" jdbcType="VARCHAR" property="nodeAddress" />
    <result column="node_name" jdbcType="VARCHAR" property="nodeName" />
    <result column="total_vote_amount" jdbcType="VARCHAR" property="totalVoteAmount" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="node_type" jdbcType="VARCHAR" property="nodeType" />
    <result column="node_mint_reward_amount" jdbcType="DECIMAL" property="nodeMintRewardAmount" />
    <result column="node_vote_reward_amount" jdbcType="DECIMAL" property="nodeVoteRewardAmount" />
    <result column="node_total_reward_amount" jdbcType="DECIMAL" property="nodeTotalRewardAmount" />
    <result column="reward_vote_percent_rate" jdbcType="DECIMAL" property="rewardVotePercentRate" />
    <result column="block_number" jdbcType="BIGINT" property="blockNumber" />
    <result column="block_hash" jdbcType="VARCHAR" property="blockHash" />
    <result column="block_timestamp" jdbcType="BIGINT" property="blockTimestamp" />
    <result column="create_timestamp" jdbcType="TIMESTAMP" property="createTimestamp" />
    <result column="update_timestamp" jdbcType="TIMESTAMP" property="updateTimestamp" />
  </resultMap>

  <resultMap id="dailyRewardBaseResultMap" type="com.hpb.bc.vo.NodeDailyRewardVo">
    <result column="nodeAddress" jdbcType="VARCHAR" property="nodeAddress" />
    <result column="nodeName" jdbcType="VARCHAR" property="nodeName" />
    <result column="totalAmount" jdbcType="VARCHAR" property="totalAmount" />
    <result column="dateStr" jdbcType="VARCHAR" property="dateStr" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    node_address, node_name, total_vote_amount, balance, node_type, node_mint_reward_amount, 
    node_vote_reward_amount, node_total_reward_amount, reward_vote_percent_rate, block_number, 
    block_hash, block_timestamp, create_timestamp, update_timestamp
  </sql>
  <select id="selectByExample" parameterType="com.hpb.bc.example.HpbNodeRewardRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hpb_node_reward_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.hpb.bc.example.HpbNodeRewardRecordExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from hpb_node_reward_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hpb.bc.entity.HpbNodeRewardRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into hpb_node_reward_record (node_address, node_name, total_vote_amount, 
      balance, node_type, node_mint_reward_amount, 
      node_vote_reward_amount, node_total_reward_amount, 
      reward_vote_percent_rate, block_number, block_hash, 
      block_timestamp, create_timestamp, update_timestamp
      )
    values (#{nodeAddress,jdbcType=VARCHAR}, #{nodeName,jdbcType=VARCHAR}, #{totalVoteAmount,jdbcType=VARCHAR}, 
      #{balance,jdbcType=DECIMAL}, #{nodeType,jdbcType=VARCHAR}, #{nodeMintRewardAmount,jdbcType=DECIMAL}, 
      #{nodeVoteRewardAmount,jdbcType=DECIMAL}, #{nodeTotalRewardAmount,jdbcType=DECIMAL}, 
      #{rewardVotePercentRate,jdbcType=DECIMAL}, #{blockNumber,jdbcType=BIGINT}, #{blockHash,jdbcType=VARCHAR}, 
      #{blockTimestamp,jdbcType=BIGINT}, #{createTimestamp,jdbcType=TIMESTAMP}, #{updateTimestamp,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hpb.bc.entity.HpbNodeRewardRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into hpb_node_reward_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nodeAddress != null">
        node_address,
      </if>
      <if test="nodeName != null">
        node_name,
      </if>
      <if test="totalVoteAmount != null">
        total_vote_amount,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="nodeType != null">
        node_type,
      </if>
      <if test="nodeMintRewardAmount != null">
        node_mint_reward_amount,
      </if>
      <if test="nodeVoteRewardAmount != null">
        node_vote_reward_amount,
      </if>
      <if test="nodeTotalRewardAmount != null">
        node_total_reward_amount,
      </if>
      <if test="rewardVotePercentRate != null">
        reward_vote_percent_rate,
      </if>
      <if test="blockNumber != null">
        block_number,
      </if>
      <if test="blockHash != null">
        block_hash,
      </if>
      <if test="blockTimestamp != null">
        block_timestamp,
      </if>
      <if test="createTimestamp != null">
        create_timestamp,
      </if>
      <if test="updateTimestamp != null">
        update_timestamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nodeAddress != null">
        #{nodeAddress,jdbcType=VARCHAR},
      </if>
      <if test="nodeName != null">
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="totalVoteAmount != null">
        #{totalVoteAmount,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="nodeType != null">
        #{nodeType,jdbcType=VARCHAR},
      </if>
      <if test="nodeMintRewardAmount != null">
        #{nodeMintRewardAmount,jdbcType=DECIMAL},
      </if>
      <if test="nodeVoteRewardAmount != null">
        #{nodeVoteRewardAmount,jdbcType=DECIMAL},
      </if>
      <if test="nodeTotalRewardAmount != null">
        #{nodeTotalRewardAmount,jdbcType=DECIMAL},
      </if>
      <if test="rewardVotePercentRate != null">
        #{rewardVotePercentRate,jdbcType=DECIMAL},
      </if>
      <if test="blockNumber != null">
        #{blockNumber,jdbcType=BIGINT},
      </if>
      <if test="blockHash != null">
        #{blockHash,jdbcType=VARCHAR},
      </if>
      <if test="blockTimestamp != null">
        #{blockTimestamp,jdbcType=BIGINT},
      </if>
      <if test="createTimestamp != null">
        #{createTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTimestamp != null">
        #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hpb.bc.example.HpbNodeRewardRecordExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from hpb_node_reward_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hpb_node_reward_record
    <set>
      <if test="record.nodeAddress != null">
        node_address = #{record.nodeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeName != null">
        node_name = #{record.nodeName,jdbcType=VARCHAR},
      </if>
      <if test="record.totalVoteAmount != null">
        total_vote_amount = #{record.totalVoteAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.nodeType != null">
        node_type = #{record.nodeType,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeMintRewardAmount != null">
        node_mint_reward_amount = #{record.nodeMintRewardAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.nodeVoteRewardAmount != null">
        node_vote_reward_amount = #{record.nodeVoteRewardAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.nodeTotalRewardAmount != null">
        node_total_reward_amount = #{record.nodeTotalRewardAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.rewardVotePercentRate != null">
        reward_vote_percent_rate = #{record.rewardVotePercentRate,jdbcType=DECIMAL},
      </if>
      <if test="record.blockNumber != null">
        block_number = #{record.blockNumber,jdbcType=BIGINT},
      </if>
      <if test="record.blockHash != null">
        block_hash = #{record.blockHash,jdbcType=VARCHAR},
      </if>
      <if test="record.blockTimestamp != null">
        block_timestamp = #{record.blockTimestamp,jdbcType=BIGINT},
      </if>
      <if test="record.createTimestamp != null">
        create_timestamp = #{record.createTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTimestamp != null">
        update_timestamp = #{record.updateTimestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hpb_node_reward_record
    set node_address = #{record.nodeAddress,jdbcType=VARCHAR},
      node_name = #{record.nodeName,jdbcType=VARCHAR},
      total_vote_amount = #{record.totalVoteAmount,jdbcType=VARCHAR},
      balance = #{record.balance,jdbcType=DECIMAL},
      node_type = #{record.nodeType,jdbcType=VARCHAR},
      node_mint_reward_amount = #{record.nodeMintRewardAmount,jdbcType=DECIMAL},
      node_vote_reward_amount = #{record.nodeVoteRewardAmount,jdbcType=DECIMAL},
      node_total_reward_amount = #{record.nodeTotalRewardAmount,jdbcType=DECIMAL},
      reward_vote_percent_rate = #{record.rewardVotePercentRate,jdbcType=DECIMAL},
      block_number = #{record.blockNumber,jdbcType=BIGINT},
      block_hash = #{record.blockHash,jdbcType=VARCHAR},
      block_timestamp = #{record.blockTimestamp,jdbcType=BIGINT},
      create_timestamp = #{record.createTimestamp,jdbcType=TIMESTAMP},
      update_timestamp = #{record.updateTimestamp,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectSumVoteRewardByAddressAndStartBlockNumberAndEndBlockNumber" resultType="java.math.BigDecimal">
    select sum(node_vote_reward_amount) as nodeVoteRewardAmount from hpb_node_reward_record where node_address = #{address,jdbcType=VARCHAR} and  block_timestamp between  #{startBlockTimestamp,jdbcType=BIGINT}
    and    #{endBlockTimestamp,jdbcType=BIGINT}
  </select>

  <!-- selectNodeRewardList -->

  <select id="selectNodeRewardList" resultMap="BaseResultMap" >
    select <include refid="Base_Column_List" />
     from hpb_node_reward_record where node_address = #{address,jdbcType=VARCHAR} and  block_timestamp between  #{startBlockTimestamp,jdbcType=BIGINT}
    and    #{endBlockTimestamp,jdbcType=BIGINT}
  </select>

  <select id="selectNodeDailyRewardList" resultMap = "dailyRewardBaseResultMap" >
    select SUM(node_total_reward_amount) AS totalAmount ,FROM_UNIXTIME(block_timestamp, "%Y-%m-%d") AS dateStr ,node_address as nodeAddress,node_name as nodeName  FROM `hpb_node_reward_record`  where
    node_address = #{address,jdbcType=VARCHAR} and  block_timestamp between  #{startBlockTimestamp,jdbcType=BIGINT}
    and    #{endBlockTimestamp,jdbcType=BIGINT} GROUP BY dateStr ORDER BY dateStr DESC
  </select>

  <select id="selectNodeMonthRewardList" resultMap = "dailyRewardBaseResultMap" >
    select SUM(node_total_reward_amount) AS totalAmount ,FROM_UNIXTIME(block_timestamp, "%Y-%m") AS dateStr,node_address as nodeAddress,node_name as nodeName   FROM `hpb_node_reward_record`  where
    node_address = #{address,jdbcType=VARCHAR} and  block_timestamp between  #{startBlockTimestamp,jdbcType=BIGINT}
    and    #{endBlockTimestamp,jdbcType=BIGINT}  GROUP BY dateStr ORDER BY dateStr DESC
  </select>

  <select id="selectNodeDailyRewardAssignedList" resultMap = "dailyRewardBaseResultMap" >
  select SUM(node_total_reward_amount) AS totalAmount ,FROM_UNIXTIME(block_timestamp, "%Y-%m-%d")  as dateStr,node_address as nodeAddress,node_name as nodeName   FROM `hpb_node_reward_record`
  where  FROM_UNIXTIME(block_timestamp, "%Y-%m-%d") = #{queryDateTime,jdbcType=VARCHAR} GROUP BY node_address ORDER BY totalAmount desc
  </select>


  <select id="selectNodeMonthRewardAssignedList" resultMap = "dailyRewardBaseResultMap" >
select SUM(node_total_reward_amount) AS totalAmount ,FROM_UNIXTIME(block_timestamp, "%Y-%m")  as dateStr,node_address as nodeAddress,node_name as nodeName FROM `hpb_node_reward_record`  where
 FROM_UNIXTIME(block_timestamp, "%Y-%m") = #{queryDateTime,jdbcType=VARCHAR} GROUP BY node_address ORDER BY totalAmount desc
  </select>


</mapper>
